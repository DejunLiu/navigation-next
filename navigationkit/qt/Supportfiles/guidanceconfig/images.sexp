(nav-instruct (command-set-version [uint]103 media-type image/bmp media-sub-type "8bit")
  (section (name ttf)
	(instruction (turn * stacknext * pos continue)
	  (image (id y)))
    (instruction (turn DT. pos !continue)
      (image (id V)))
    (instruction (turn DT.R pos !continue)
      (image (id W)))
    (instruction (turn DT.L pos !continue)
      (image (id U)))
    (instruction (turn TR.R stacknext * pos !continue)
      (image (id z)))
    (instruction (turn TR.L stacknext * pos !continue)
      (image (id x)))
    (instruction (turn EX. stacknext * pos !continue)
      (image (id h)))
    (instruction (turn EX.R stacknext * pos !continue)
      (image (id i)))
    (instruction (turn EX.L stacknext * pos !continue)
      (image (id g)))
    (instruction (turn MR.R stacknext * pos !continue)
      (image (id d)))
    (instruction (turn MR.L stacknext * pos !continue)
      (image (id c)))
    (instruction (turn EN. stacknext * pos !continue)
      (image (id S)))
    (instruction (turn EN.R stacknext * pos !continue)
      (image (id T)))
    (instruction (turn EN.L stacknext * pos !continue)
      (image (id R)))
    (instruction (turn KP.R stacknext * pos !continue)
      (image (id f)))
    (instruction (turn KP.L stacknext * pos !continue)
      (image (id e)))
    (instruction (turn KP. stacknext * pos !continue)
      (image (id y)))
    (instruction (turn UT. stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id b))
      )
      (if-right-side-traffic()	
      	(image (id a))
      )
    )
    (instruction (turn NC. stacknext * pos !continue)
      (image (id y)))
	(instruction (turn CO. stacknext * pos !continue)
      (image (id y)))
    (instruction (turn RE. stacknext * pos look-ahead)
	  (if (turn * stacknext * next RX.1|RX.2|RX.3|RX.4|RX.5|RX.6|RX.7|RX.8|RX.9|RX.10)
		(if-left-side-traffic()
		  (image (id o))
		)
		(if-right-side-traffic()	
		  (image (id l))
		)
	  )
	  (if (turn * stacknext * next DT.|DT.L|DT.R)
		(if-left-side-traffic()
		  (image (id n))
		)
		(if-right-side-traffic()	
		  (image (id k))
		)
	  )
    )
	(instruction (turn RE. stacknext * pos show-turn|prepare|turn|past-turn|recalc)
      (if-left-side-traffic()
      	(image (id n))
      )
      (if-right-side-traffic()	
      	(image (id k))
      )
    )
    (instruction (turn RT. stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id m))
      )
      (if-right-side-traffic()	
      	(image (id j))
      )
    )
    (instruction (turn RX.1|RX.2|RX.3|RX.4|RX.5|RX.6|RX.7|RX.8|RX.9|RX.10 stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id o))
      )
      (if-right-side-traffic()	
      	(image (id l))
      )
    )
    (instruction (turn NR.R stacknext * pos !continue)
      (image (id z)))
    (instruction (turn NR.L stacknext * pos !continue)
      (image (id x)))
    (instruction (turn NR. stacknext * pos !continue)
      (image (id y)))
    (instruction (turn BE.R stacknext * pos !continue)
      (image (id r)))
    (instruction (turn BE.L stacknext * pos !continue)
      (image (id p)))
    (instruction (turn BE. stacknext * pos !continue)
      (image (id q)))
    (instruction (turn TE.R stacknext * pos !continue)
      (image (id u)))
    (instruction (turn TE.L stacknext * pos !continue)
      (image (id s)))
    (instruction (turn TE. stacknext * pos !continue)
      (image (id t)))
    (instruction (turn ES.R stacknext * pos !continue)
      (image (id 3)))
    (instruction (turn ES.L stacknext * pos !continue)
      (image (id 1)))
    (instruction (turn ES. stacknext * pos !continue)
      (image (id 2)))
    (instruction (turn EE.R stacknext * pos !continue)
      (image (id 6)))
    (instruction (turn EE.L stacknext * pos !continue)
      (image (id 4)))
    (instruction (turn EE. stacknext * pos !continue)
      (image (id 5)))
    (instruction (turn ER.R stacknext * pos !continue)
      (image (id i)))
    (instruction (turn ER.L stacknext * pos !continue)
      (image (id g)))
    (instruction (turn ER. stacknext * pos !continue)
      (image (id h)))
    (instruction (turn PE. stacknext * pos !continue)
      (image (id 7)))
    (instruction (turn PE.R stacknext * pos !continue)
      (image (id 7)))
    (instruction (turn PE.L stacknext * pos !continue)
      (image (id 7)))
    (instruction (turn FE. stacknext * pos !continue)
      (image (id v)))
    (instruction (turn EC. stacknext * pos !continue)
      (image (id 0)))
    (instruction (turn EC.R stacknext * pos !continue)
      (image (id 0)))
    (instruction (turn EC.L stacknext * pos !continue)
      (image (id 0)))  
    (instruction (turn FX. stacknext * pos !continue)
      (image (id w)))
	(instruction (turn BR. stacknext * pos !continue)
      (image (id q)))	
	(instruction (turn BR.L stacknext * pos !continue)
      (image (id p)))
	(instruction (turn BR.R stacknext * pos !continue)
      (image (id r)))
	(instruction (turn ET. stacknext * pos !continue)
      (image (id t)))
	(instruction (turn ET.L stacknext * pos !continue)
      (image (id s)))
	(instruction (turn ET.R stacknext * pos !continue)
      (image (id u)))
	(instruction (turn KH.L stacknext * pos !continue)
      (image (id e)))
	(instruction (turn KH.R stacknext * pos !continue)
      (image (id f)))
	(instruction (turn KH. stacknext * pos !continue)
      (image (id y)))
	(instruction (turn KS. stacknext * pos !continue)
      (image (id y)))
	(instruction (turn KS.L stacknext * pos !continue)
      (image (id e)))
	(instruction (turn KS.R stacknext * pos !continue)
      (image (id f)))
	(instruction (turn KR.L stacknext * pos !continue)
      (image (id e)))
	(instruction (turn KR.R stacknext * pos !continue)
      (image (id f)))
	(instruction (turn OR. stacknext * pos !continue)
      (image (id X)))
	(instruction (turn SH. stacknext * pos !continue)
      (image (id y)))
	(instruction (turn SH.L stacknext * pos !continue)
      (image (id e)))
	(instruction (turn SH.R stacknext * pos !continue)
      (image (id f)))
	(instruction (turn ST.L stacknext * pos !continue)
      (image (id e)))
    (instruction (turn ST. stacknext * pos !continue)
      (image (id y)))
	(instruction (turn ST.R stacknext * pos !continue)
      (image (id f)))
	(instruction (turn TR.HL stacknext * pos !continue)
      (image (id "{")))
	(instruction (turn TR.HR stacknext * pos !continue)
      (image (id "}")))
	(instruction (turn TR.SL stacknext * pos !continue)
      (image (id "|")))
	(instruction (turn TR.SR stacknext * pos !continue)
      (image (id "\\"))))

  (section (name image)
	(instruction (turn * stacknext * pos continue)
	  (image (id pre-nc)))
    (instruction (turn DT. pos !continue)
      (image (id dt)))
    (instruction (turn DT.R pos !continue)
      (image (id dt-r)))
    (instruction (turn DT.L pos !continue)
      (image (id dt-l)))
    (instruction (turn TR.R stacknext * pos !continue)
      (image (id tr-r)))
    (instruction (turn TR.L stacknext * pos !continue)
      (image (id tr-l)))
    (instruction (turn EX. stacknext * pos !continue)
      (image (id nc)))
    (instruction (turn EX.R stacknext * pos !continue)
      (image (id ex-r)))
    (instruction (turn EX.L stacknext * pos !continue)
      (image (id ex-l)))
    (instruction (turn MR.R stacknext * pos show-turn)
      (image (id nc)))
    (instruction (turn MR.L stacknext * pos show-turn)
      (image (id nc)))  
    (instruction (turn MR.R stacknext * pos prepare|turn|past-turn|recalc)
      (image (id mr-r)))
    (instruction (turn MR.L stacknext * pos prepare|turn|past-turn|recalc)
      (image (id mr-l)))
    (instruction (turn EN. stacknext * pos !continue)
      (image (id en)))
    (instruction (turn EN.R stacknext * pos !continue)
      (image (id en-r)))
    (instruction (turn EN.L stacknext * pos !continue)
      (image (id en-l)))
    (instruction (turn KP.R stacknext * pos !continue)
      (image (id kp-r)))
    (instruction (turn KP.L stacknext * pos !continue)
      (image (id kp-l)))
    (instruction (turn KP. stacknext * pos !continue)
      (image (id nc)))
    (instruction (turn UT. stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id ut-left))
      )
      (if-right-side-traffic()	
      	(image (id ut))
      )
    )
    (instruction (turn NC. stacknext * pos !continue)
      (image (id nc)))
	(instruction (turn CO. stacknext * pos !continue)
      (image (id nc)))
    (instruction (turn RE. stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id re-left))
      )
      (if-right-side-traffic()	
      	(image (id re))
      )
    )
    (instruction (turn RT. stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id rt-left))
      )
      (if-right-side-traffic()	
      	(image (id rt))
      )
    )
    (instruction (turn RX.1|RX.2|RX.3|RX.4|RX.5|RX.6|RX.7|RX.8|RX.9|RX.10 stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id lht-rx))
      )
      (if-right-side-traffic()	
      	(image (id rx))
      )
    )
    (instruction (turn NR.R stacknext * pos !continue)
      (image (id tr-r)))
    (instruction (turn NR.L stacknext * pos !continue)
      (image (id tr-l)))
    (instruction (turn NR. stacknext * pos !continue)
      (image (id nc)))
    (instruction (turn BE.R stacknext * pos !continue)
      (image (id tr-r)))
    (instruction (turn BE.L stacknext * pos !continue)
      (image (id tr-l)))
    (instruction (turn BE. stacknext * pos !continue)
      (image (id br)))
    (instruction (turn TE.R stacknext * pos !continue)
      (image (id tr-r)))
    (instruction (turn TE.L stacknext * pos !continue)
      (image (id tr-l)))
    (instruction (turn TE. stacknext * pos !continue)
      (image (id et)))
    (instruction (turn ES.R stacknext * pos !continue)
      (image (id st-r)))
    (instruction (turn ES.L stacknext * pos !continue)
      (image (id st-l)))
    (instruction (turn ES. stacknext * pos !continue)
      (image (id st)))
    (instruction (turn EE.R stacknext * pos !continue)
      (image (id es-r)))
    (instruction (turn EE.L stacknext * pos !continue)
      (image (id es-l)))
    (instruction (turn EE. stacknext * pos !continue)
      (image (id es)))
    (instruction (turn ER.R stacknext * pos !continue)
      (image (id ex-r)))
    (instruction (turn ER.L stacknext * pos !continue)
      (image (id ex-l)))
    (instruction (turn ER. stacknext * pos !continue)
      (image (id ex)))
    (instruction (turn PE. stacknext * pos !continue)
      (image (id cf)))
    (instruction (turn PE.R stacknext * pos !continue)
      (image (id cf)))
    (instruction (turn PE.L stacknext * pos !continue)
      (image (id cf)))
    (instruction (turn FE. stacknext * pos !continue)
      (image (id enf)))
    (instruction (turn EC. stacknext * pos !continue)
      (image (id ec)))
    (instruction (turn EC.R stacknext * pos !continue)
      (image (id tr-r)))
    (instruction (turn EC.L stacknext * pos !continue)
      (image (id tr-l)))  
    (instruction (turn FX. stacknext * pos !continue)
      (image (id exf)))
	(instruction (turn BR. stacknext * pos !continue)
      (image (id br)))	
	(instruction (turn BR.L stacknext * pos !continue)
      (image (id br-l)))
	(instruction (turn BR.R stacknext * pos !continue)
      (image (id br-r)))
	(instruction (turn ET. stacknext * pos !continue)
      (image (id et)))
	(instruction (turn ET.L stacknext * pos !continue)
      (image (id et-l)))
	(instruction (turn ET.R stacknext * pos !continue)
      (image (id et-r))))

  (section (name image-small)
	(instruction (turn * stacknext * pos continue)
	  (image (id small-nc)))
    (instruction (turn DT. pos !continue)
      (image (id small-dt)))
    (instruction (turn DT.R pos !continue)
      (image (id small-dt-r)))
    (instruction (turn DT.L pos !continue)
      (image (id small-dt-l)))
    (instruction (turn TR.R stacknext * pos !continue)
      (image (id small-tr-r)))
    (instruction (turn TR.L stacknext * pos !continue)
      (image (id small-tr-l)))
    (instruction (turn EX. stacknext * pos !continue)
      (image (id small-nc)))
    (instruction (turn EX.R stacknext * pos !continue)
      (image (id small-ex-r)))
    (instruction (turn EX.L stacknext * pos !continue)
      (image (id small-ex-l)))
    (instruction (turn MR.R stacknext * pos show-turn)
      (image (id small- nc)))
    (instruction (turn MR.L stacknext * pos show-turn)
      (image (id small-nc)))  
    (instruction (turn MR.R stacknext * pos prepare|turn|past-turn|recalc)
      (image (id small-mr-r)))
    (instruction (turn MR.L stacknext * pos prepare|turn|past-turn|recalc)
      (image (id small-mr-l)))
    (instruction (turn EN. stacknext * pos !continue)
      (image (id small-en)))
    (instruction (turn EN.R stacknext * pos !continue)
      (image (id small-en-r)))
    (instruction (turn EN.L stacknext * pos !continue)
      (image (id small-en-l)))
    (instruction (turn KP.R stacknext * pos !continue)
      (image (id small-kp-r)))
    (instruction (turn KP.L stacknext * pos !continue)
      (image (id small-kp-l)))
    (instruction (turn KP. stacknext * pos !continue)
      (image (id small-nc)))
    (instruction (turn UT. stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id small-ut-left))
      )
      (if-right-side-traffic()	
      	(image (id small-ut))
      )
    )
    (instruction (turn NC. stacknext * pos !continue)
      (image (id small-nc)))
	(instruction (turn CO. stacknext * pos !continue)
      (image (id small-nc)))
    (instruction (turn RE. stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id small-re-left))
      )
      (if-right-side-traffic()	
      	(image (id small-re))
      )
    )
    (instruction (turn RT. stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id small-rt-left))
      )
      (if-right-side-traffic()	
      	(image (id small-rt))
      )
    )
    (instruction (turn RX.1|RX.2|RX.3|RX.4|RX.5|RX.6|RX.7|RX.8|RX.9|RX.10 stacknext * pos !continue)
      (if-left-side-traffic()
      	(image (id small-lht-rx))
      )
      (if-right-side-traffic()	
      	(image (id small-rx))
      )
    )
    (instruction (turn NR.R stacknext * pos !continue)
      (image (id small-tr-r)))
    (instruction (turn NR.L stacknext * pos !continue)
      (image (id small-tr-l)))
    (instruction (turn NR. stacknext * pos !continue)
      (image (id small-nc)))
    (instruction (turn BE.R stacknext * pos !continue)
      (image (id small-tr-r)))
    (instruction (turn BE.L stacknext * pos !continue)
      (image (id small-tr-l)))
    (instruction (turn BE. stacknext * pos !continue)
      (image (id small-br)))
    (instruction (turn TE.R stacknext * pos !continue)
      (image (id small-tr-r)))
    (instruction (turn TE.L stacknext * pos !continue)
      (image (id small-tr-l)))
    (instruction (turn TE. stacknext * pos !continue)
      (image (id small-et)))
    (instruction (turn ES.R stacknext * pos !continue)
      (image (id small-st-r)))
    (instruction (turn ES.L stacknext * pos !continue)
      (image (id small-st-l)))
    (instruction (turn ES. stacknext * pos !continue)
      (image (id small-st)))
    (instruction (turn EE.R stacknext * pos !continue)
      (image (id small-es-r)))
    (instruction (turn EE.L stacknext * pos !continue)
      (image (id small-es-l)))
    (instruction (turn EE. stacknext * pos !continue)
      (image (id small-es)))
    (instruction (turn ER.R stacknext * pos !continue)
      (image (id small-ex-r)))
    (instruction (turn ER.L stacknext * pos !continue)
      (image (id small-ex-l)))
    (instruction (turn ER. stacknext * pos !continue)
      (image (id small-ex)))
    (instruction (turn PE. stacknext * pos !continue)
      (image (id small-cf)))
    (instruction (turn PE.R stacknext * pos !continue)
      (image (id small-cf)))
    (instruction (turn PE.L stacknext * pos !continue)
      (image (id small-cf)))
    (instruction (turn FE. stacknext * pos !continue)
      (image (id small-enf)))
    (instruction (turn EC. stacknext * pos !continue)
      (image (id small-ec)))
    (instruction (turn EC.R stacknext * pos !continue)
      (image (id small-tr-r)))
    (instruction (turn EC.L stacknext * pos !continue)
      (image (id small-tr-l)))
    (instruction (turn FX. stacknext * pos !continue)
      (image (id small-exf)))
	(instruction (turn BR. stacknext * pos !continue)
      (image (id small-br)))	
	(instruction (turn BR.L stacknext * pos !continue)
      (image (id small-br-l)))
	(instruction (turn BR.R stacknext * pos !continue)
      (image (id small-br-r)))
	(instruction (turn ET. stacknext * pos !continue)
      (image (id small-et)))
	(instruction (turn ET.L stacknext * pos !continue)
      (image (id small-et-l)))
	(instruction (turn ET.R stacknext * pos !continue)
      (image (id small-et-r)))))
